shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
rm(list=ls())
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
hv<-c(10,25,45)
hv<-hv/hv[1]
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
selectedid2 <-as.vector(windSpeeds[windSpeeds$id==id,])
str(windSpeeds)
selectedid2 <-as.vector(windSpeeds[windSpeeds$id==id,])
id=24
selectedid2 <-as.vector(windSpeeds[windSpeeds$id==id,])
selectedid2
selectedid2[4:6]
h<-c(10,25,45)
selectedid2[4:6]/h[1]
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
id=24
selectedid2 <-as.vector(windSpeeds[windSpeeds$id==id,])
selectedid2[4:6]/h[1]
log(selectedid2[4:6]/h[1])
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
rm(list=ls())
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
rm(list=ls())
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
hv<-c(10,25,45)
ws<-c(4,6,8)
wsAdj<-function(height,hVector,wsVector){
hlog<-log(hVector/hVector[1])
wslog<-log(wsVector/wsVector[1])
fit<-lm(wslog~-1+hlog)
wsVector[1]*(height/hVector[1])^fit[1]
}
wsAdj(15,hv,ws)
hlog<-log(hv/hv[1])
wslog<-log(ws/ws[1])
fit<-lm(wslog~-1+hlog)
fit[1]
class(fit[1])
fit[[1]]
class(fir[[1]])
class(fit[[1]])
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
selectedid <-as.vector(windSpeeds[windSpeeds$id==24,])
wsVector<-selectedid[4:6]
wsVector
class(wsVector)
class(selectedid[[4:6]])
selectedid[[4:6]]
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
fit
fit[[1]]
fit[[1]]*2
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
wsVector <-as.vector(windSpeeds[windSpeeds$id==id,4:6])
id=45
wsVector <-as.vector(windSpeeds[windSpeeds$id==id,4:6])
class(wsVector)
class(as.vector(wsVector))
class (c(10,25,45))
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
?clearShapes
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
rm(list=ls())
df = data.frame(Lat = 1:10, Long = rnorm(10))
leaflet(df) %>% addCircles()
df = data.frame(Lat = 1:10, Long = rnorm(10))
leaflet(df) %>% addTiles() %>% addCircles()
df = data.frame(Lat = 1:10, Long = rnorm(10))
leaflet() %>% addTiles() %>% addCircles(data=df)
?navbarPage
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project')
devtools::install_github('muschellij2/slidify')
library(slidify)
library("stringr", lib.loc="\\\\cam-stf-fs1/users/michael.hunt/my documents/R/win-library/3.2")
install.packages(c("car", "CORElearn", "dplyr", "jsonlite", "quantreg", "raster", "sp", "tidyr", "xml2"))
# install slidify
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install.packages("devtools")
library(devtools)
install.packages("devtools")
# install slidify
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install_github('ramnathv/slidify')
library(devtools)
install.packages("devtools")
library(devtools)
library(stringr)
install.packages("devtools")
library(devtools)
require(devtools)
install.packages(c('devtools','xml2'))
library(devtools)
install.packages("Rtools")
library(slidify)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(slidify)
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
cat('<iframe> m</iframe>')
saveWidget(m, 'cornwall.html')
?cat
library(slidify)
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
shiny::runApp('H:/Rspace/DASI/ShinyEd/CLT_mean')
library(openintro)
install.packages("openintro")
shiny::runApp('H:/Rspace/DASI/ShinyEd/CLT_mean')
install.packages("BHH2")
?BHH2
shiny::runApp('H:/Rspace/DASI/ShinyEd/CLT_mean')
?pnorm
pnorm(3.6,3.45,0.163)
pnorm(0.92)
pnorm(0.92,lower.tail=FALSE)
qnorm(0.975)
qnorm((1-0.95)/2
)
qnorm(1-(1-0.95)/2
)
qnorm(1-(1-0.98)/2)
shiny::runApp('H:/Rspace/JHU_Data_Science/JHU_DDP/Project/Shiny')
4+6
qnorm(0.8)
qnorm(0.025)
1-qnorm(0.05/2)
qnorm(1-0.05/2)
pnorm(0.84)
a=seq(20,5000)
length(a)
sd=10
alpha=0.05
effectSize=3
N=c(seq(20,5000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N,power)
sd=10
alpha=0.05
effectSize=3
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N,power)
sd=10
alpha=0.01
effectSize=3
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N,power)
sd=10
alpha=0.01
effectSize=1
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N,power)
sd=10
alpha=0.01
effectSize=2
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N,power)
dnorm(seq(-3,3,0.1),mean=0,sd=sd)
plot(dnorm(seq(-3,3,0.1),mean=0,sd=sd))
library(openintro)
data(COL)
BuildNull <- function() {
normTail(0, 1.07, L = -1000, U = 1000,
df = 50, lwd = 2.5, axes = FALSE,
curveColor = COL[1],
xlim = c(-10, 10))
axis(1, at = seq(-15, 15, 3))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.5)
text(0.6, 0.3, "Null distribution", col = COL[1], pos = 4)
lines(rep(0, 2), c(0, dnorm(0, 0, 1.07)),
col = COL[1,4], lwd = 0.5)
}
BuildNull()
normTail(-3, 1.07, L = -2.10, U = 1000,
df = 50, lwd = 2, add = TRUE,
curveColor = COL[2, 2],
col = COL[2, 2], border = COL[2])
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.07)),
col = COL[2,4], lwd = 0.5)
segments(2.1 * c(-1, 1), rep(0, 2), y1 = rep(0.2, 2),
col = COL[4, 4], lty = 3, lwd = 3)
segments(2.1 * c(-1, 1), rep(0, 2), y1 = rep(0.2, 2),
col = COL[4, 4], lty = 3, lwd = 1.5)
text(rep(-6, 2), 1.5 * c(0.21, 0.15),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
arrows(-3, 0.02, -2.15, 0.02,
col = COL[3], lwd = 2,
length = 0.05, code = 3)
text(-2.85, 0.01, "0.84 SE", pos = 3, col = COL[3], cex = 0.75)
rect(-1.5, 0.005, 0.5, 0.1, col = "#ffffffAA", border = "#00000000")
arrows(-2.05, 0.02, 0, 0.02,
col = COL[4], lwd = 2,
length = 0.05, code = 3)
text(-1, 0.007, "1.96 SE", pos = 3, col = COL[4], cex = 0.75)
?pt
sd=10
alpha=0.01
effectSize=2
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 5000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 1000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
plot(N, power)
plot(n, p,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 5000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
library(openintro)
data(COL)
n <- c(10:500, seq(510, 2000, 10), seq(2100, 10000, 100))
se <- sapply(n, function(x) sqrt(2 * 12^2 / x))
left.reject <- -1.96 * se
x <- (left.reject - (-3)) / se
p <- pt(x, 2 * n - 2)
plot(n, p,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 5000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(n, p, col = COL[1], lwd = 3)
?lines
abline(h = 0:1, lty = 2, col = COL[6,2])
?axis
sd=10
alpha=0.01
effectSize=2
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 1000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
plot(N, power)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(N, power, col = COL[1], lwd = 3)
sd=10
alpha=0.01
effectSize=2
N=c(seq(20,1000))
power=pnorm(effectSize*sqrt(N)/(sqrt(2)*sd)-qnorm(1-alpha/2))
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 1000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(N, power, col = COL[1], lwd = 3)
source('~/.active-rstudio-document')
power=pt(effectSize*sqrt(N)/(sqrt(2)*sd)-qt(1-alpha/2,2*N-2),2*N-2)
sd=10
alpha=0.01
effectSize=3
N=c(seq(20,1000))
power=pt(effectSize*sqrt(N)/(sqrt(2)*sd)-qt(1-alpha/2,2*N-2),2*N-2)
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 1000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(N, power, col = COL[1], lwd = 3)
power=pt(effectSize*sqrt(N)/(sqrt(2)*sd)-qt(1-alpha/2,N-1),2*N-2)
power=pt(effectSize*sqrt(N)/(sqrt(2)*sd)-qt(1-alpha/2,N-1),2*N-2)
plot(N, power,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 1000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(N, power, col = COL[1], lwd = 3)
COL
COL[6,2]
COL[13]
?axis
?lines
?pt
dt1<-dt(seq(-5,5,.1),5)
dt2<-dt(seq(-5,5,.1),50)
dt3<-dt(seq(-5,5,.1),500)
plot(dt1,dt2,dt3)
plot(dt1)
plot(dt2)
plot(dt3)
pt(2.5,58)
qt(2.5,58)
qt(10)
pt(10)
pt(2,10)
pt(2,10)*2
pt(2,10,lower.tail=FALSE)*2
qt(.975)
qt(0.975,21)
pt(-2.1,18)
pt(3,2,lower.tail=FALSE)*2
pt(7.59,72)
pt(7.59,72,lower.tail=FALSE)*2
ci=c(-1,1)*qt(0.975,72)*1.67
ci
ci=12.76+c(-1,1)*qt(0.975,72)*1.67
ci
pt(2.5,19)
pt(2.5,19,lower.tail=FALSE)*2
pnprm(2.5,lower.tail=FALSE)*2
pt(2.5,39,lower.tail=FALSE)*2
pt(2.5,59,lower.tail=FALSE)*2
pt(1.54,49)
pt(1.54,49,lower.tail=FALSE)*2
review<- readRDS("../JHU_CAP_data/review.Rds")
review<- readRDS("../JHU_CAP_data/reviewData.rds")
review<- readRDS("./JHU_CAP_data/reviewData.rds")
## Get the data
library(jsonlite)
if(!file.exists("data")){dir.create("data")}
# business data
businessData<- stream_in(file("E:/RSpace/yelp_dataset/business.json"))
saveRDS(businessData,"./data/businessData.rds")
rm(businessData)
# checkin data
checkinData<- stream_in(file("E:/RSpace/yelp_dataset/yelp_academic_dataset_checkin.json"))
saveRDS(checkinData,"./data/checkinData.rds")
rm(checkinData)
# review data
reviewData<- stream_in(file("E:/RSpace/yelp_dataset/yelp_academic_dataset_review.json"))
saveRDS(reviewData,"./data/reviewData.rds")
rm(reviewData)
# tip data
tipData<- stream_in(file("E:/RSpace/yelp_dataset/yelp_academic_dataset_tip.json"))
saveRDS(tipData,"./data/tipData.rds")
rm(tipData)
# user data
userData<- stream_in(file("E:/RSpace/yelp_dataset/yelp_academic_dataset_user.json"))
saveRDS(userData,"./data/userData.rds")
rm(userData)
review<- readRDS("./JHU_CAP_data/reviewData.rds")
qnorm()
qnorm(0.25,lower.tail=FALSE)
qnorm(0.25,lower.rail=TRUe
)
qnorm(0.25,lower.tail=TRUe)
qnorm(0.25,lower.tail=TRUE)
qnorm(1.96)
qnorm(1.0)
qnorm(.975,lower.tail=FA:SE)
qnorm(.975,lower.tail=FALSE)
qnorm(.975,lower.tail=TRUE)
review<- readRDS("../JHU_CAP_data/reviewData.rds")
review<- readRDS(".../JHU_CAP_data/reviewData.rds")
review<- readRDS("/JHU_CAP_data/reviewData.rds")
review<- readRDS("./JHU_CAP_data/reviewData.rds")
review<- readRDS("C:/Users/michael.hunt/Rspace/JHU_CAP_data/reviewData.rds")
str(review)
types<-unique(review$type)
types
review$text[1]
summary(review)
business<-<- readRDS("../JHU_CAP_data/businessData.rds")
business<-readRDS("../JHU_CAP_data/businessData.rds")
business<-readRDS("C:/Users/michael.hunt/Rspace/JHU_CAP_data/businessData.rds")
str(business)
#business<-readRDS("C:/Users/michael.hunt/Rspace/JHU_CAP_data/businessData.rds")
business<- readRDS("E:/Rspace/JHU_CAP_data/businessData.rds")
#business<-readRDS("C:/Users/michael.hunt/Rspace/JHU_CAP_data/businessData.rds")
business<- readRDS("E:/Rspace/JHU_CAP_data/businessData.rds")
setwd("C:/Users/michael.hunt/Rspace/JHU_CAP")
business<-readRDS("C:/Users/michael.hunt/Rspace/JHU_CAP_data/businessData.rds")
# business<- readRDS("E:/Rspace/JHU_CAP_data/businessData.rds")
?geocode
install.packages("ggmap")
library("BH", lib.loc="\\\\cam-stf-fs1/users/michael.hunt/my documents/R/win-library/3.2")
library(ggmap)
